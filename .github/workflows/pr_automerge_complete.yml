name: "Complete auto-merge of PR"

# Example usage:
#on:
#  workflow_run:
#    workflows: [ "Pull Request" ]
#    types: [ completed ]
#
#jobs:
#  finish-pr-automerge:
#    if: "github.actor == 'dependabot[bot]'
#      && github.event.workflow_run.event == 'pull_request'
#      && github.event.workflow_run.conclusion == 'success'"
#    uses: Jikoo/PlanarActions/.github/workflows/pr_automerge_complete.yml@master
#    with:
#      triggering-workflow-run: ${{ github.event.workflow_run.id }}

on:
  workflow_call:
    inputs:
      triggering-workflow-run:
        description: "The ID of the workflow run triggering the run executing this action."
        required: true
        type: "string"
      merge-labels:
        description: "Comma-separated labels to require for merging."
        default: "dependencies,java"
        required: false
        type: "string"

jobs:
  merge-dependabot:
    runs-on: ubuntu-latest
    steps:
      # Note: this is from GitHub's example for using data from a triggering workflow:
      # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#using-data-from-the-triggering-workflow
      - name: 'Download artifact'
        uses: actions/github-script@v7
        with:
          workflow-run-id: ${{ inputs.triggering-workflow-run }}
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: core.getInput('workflow-run-id'),
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "pr_number"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/pr_number.zip`, Buffer.from(download.data));

      - name: Add Pull Number Variable
        run: |-
          unzip pr_number.zip
          echo "PR_NUMBER=$(cat pr_number)" >> "$GITHUB_ENV"

      - name: Approve
        uses: hmarr/auto-approve-action@v4.0.0
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          pull-request-number: "${{ env.PR_NUMBER }}"

      - name: Merge
        uses: pascalgn/automerge-action@v0.16.2
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          MERGE_LABELS: ${{ inputs.merge-labels }}
          MERGE_METHOD: "squash"
          PULL_REQUEST: "${{ env.PR_NUMBER }}"
